name: CI-dev-pipeline
on:
  push:
    branches:
      - main
  pull_request:
env:
  IMAGE_NAME: e2e-tool
  TOOL: omo-devops-test-task
  SITE: vs-studio
  TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    #container:
      #image: lucasalt/act_base:latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          path: "${{env.TOOL}}"
      - uses: actions/checkout@v2
        with:
          path: "${{env.SITE}}"

      - name: ls files
        run: | 
          ls -a
          ls "${{env.SITE}}"
          ls ${{env.TOOL}}

      - name: Build docker tool
        working-directory: ${{env.TOOL}}
        run: env

      - name: Build docker tool
        working-directory: ${{env.TOOL}}
        run: docker build --file Dockerfile . --tag $IMAGE_NAME

#       - name: Run test
#         run: |
#           echo --- Running test cases ---
#           docker-compose -f ./<REPO_NAME>/docker-compose.test-github.yml -p testing up --build --exit-code-from api-test
#           echo --- Completed test cases ---
      - name: Log into registry
        run: echo "${{ secrets.GIT_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
        
        
      - name: Push image e2e
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          #[[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          #[ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_NAME:$VERSION
